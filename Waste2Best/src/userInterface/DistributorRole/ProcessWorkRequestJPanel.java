/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.DistributorRole;

import business.models.User.User;
import business.models.workRequest.CompostGeneratedWorkRequest;
import business.models.workRequest.FoodProductWorkRequest;
import business.models.workRequest.PurchaseCompostWorkRequest;
import business.models.workRequest.SeedWorkRequest;
import business.models.workRequest.SellCropProduceWorkRequest;
import business.models.workRequest.TumblerWorkRequest;
import enterprise.Enterprise;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import organizations.Organization;
import organizations.SupplierOrganization;

/**
 *
 * @author Aditya
 */
public class ProcessWorkRequestJPanel extends javax.swing.JPanel {

    
    private JPanel userProcessContainer;
    private SellCropProduceWorkRequest cRequest;
    private CompostGeneratedWorkRequest coRequest;
    private FoodProductWorkRequest foRequest;
    private PurchaseCompostWorkRequest pCRequest;
    private TumblerWorkRequest tRequest;
    private SeedWorkRequest sWRequest;
    private User userAccount;
    private Enterprise enterprise;
    private int flag;
    /**
     * Creates new form ProcessWorkRequestJPanel
     */
     public ProcessWorkRequestJPanel(JPanel userProcessContainer, User userAccount ,Enterprise enterprise, SellCropProduceWorkRequest request) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.cRequest = request;
        this.userAccount=userAccount;
        this.enterprise=enterprise;
        flag = 1;
    }
     public ProcessWorkRequestJPanel(JPanel userProcessContainer, User userAccount ,Enterprise enterprise,  CompostGeneratedWorkRequest request) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.coRequest = request;
        this.userAccount=userAccount;
        this.enterprise=enterprise;
        flag = 2;
    }
       public ProcessWorkRequestJPanel(JPanel userProcessContainer, User userAccount ,Enterprise enterprise,  FoodProductWorkRequest request) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.foRequest = request;
        this.userAccount=userAccount;
        this.enterprise=enterprise;
        flag = 3;
    }
         public ProcessWorkRequestJPanel(JPanel userProcessContainer, User userAccount ,Enterprise enterprise,  TumblerWorkRequest request) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.tRequest = request;
        this.userAccount=userAccount;
        this.enterprise=enterprise;
        flag = 4;
    }
    public ProcessWorkRequestJPanel(JPanel userProcessContainer, User userAccount ,Enterprise enterprise,  PurchaseCompostWorkRequest request) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        pCRequest = request;
        this.userAccount=userAccount;
        this.enterprise=enterprise;
        flag = 5;
    }
    public ProcessWorkRequestJPanel(JPanel userProcessContainer, User userAccount ,Enterprise enterprise,  SeedWorkRequest request) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        sWRequest = request;
        this.userAccount=userAccount;
        this.enterprise=enterprise;
        flag = 6;    
    }       

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        messageJTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        submitJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        messageJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageJTextFieldActionPerformed(evt);
            }
        });

        backJButton.setBackground(new java.awt.Color(153, 204, 255));
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        submitJButton.setBackground(new java.awt.Color(153, 204, 255));
        submitJButton.setText("Submit ");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Remark");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel2.setText("Process Work Request");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(jLabel1)
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(messageJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(232, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(messageJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        /*Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        DistributorWorkAreaJPanel dwjp = (DistributorWorkAreaJPanel) component;
        dwjp.populateTable();*/

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        Component[] comps = userProcessContainer.getComponents();
        for (Component c: comps)
        {
            if(c instanceof DistributorWorkAreaJPanel)
            {
                DistributorWorkAreaJPanel panel =(DistributorWorkAreaJPanel) c;
                panel.populateTable();
            }
        }
    }//GEN-LAST:event_backJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
      //  request.setTestResult(resultJTextField.getText());
      if (flag ==1 )
      {
        String message = messageJTextField.getText();
        cRequest.setMessage(message);
        cRequest.setReceiver(userAccount);
        cRequest.setStatus("Sent to Supplier");
        
        Organization org = null;
       for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
           if (organization instanceof SupplierOrganization){
               org = organization;
               break;
           }
       }
       if (org!=null){
           org.getWorkQueue().getWorkRequestList().add(cRequest);
           userAccount.getWorkQueue().getWorkRequestList().add(cRequest);
           JOptionPane.showMessageDialog(null, "Request submitted Successfully");
       }
      }
      else if (flag ==2 )
             
      {
        String message = messageJTextField.getText();
        coRequest.setMessage(message);
        coRequest.setReceiver(userAccount);
        coRequest.setStatus("Sent to Supplier");
        
        Organization org = null;
       for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
           if (organization instanceof SupplierOrganization){
               org = organization;
               break;
           }
       }
       if (org!=null){
           org.getWorkQueue().getWorkRequestList().add(coRequest);
           userAccount.getWorkQueue().getWorkRequestList().add(coRequest);
           JOptionPane.showMessageDialog(null, "Request submitted Successfully");
           
       }
      }
      
      else if (flag ==3)
      {

        String message = messageJTextField.getText();
        foRequest.setMessage(message);
        foRequest.setReceiver(userAccount);
        foRequest.setStatus("Sent to Supplier");
        
        Organization org = null;
       for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
           if (organization instanceof SupplierOrganization){
               org = organization;
               break;
           }
       }
       if (org!=null){
           org.getWorkQueue().getWorkRequestList().add(foRequest);
           userAccount.getWorkQueue().getWorkRequestList().add(foRequest);
           JOptionPane.showMessageDialog(null, "Request submitted Successfully");
       }

      }
      
        else if (flag ==4)
      {

        String message = messageJTextField.getText();
        tRequest.setMessage(message);
        tRequest.setReceiver(userAccount);
        tRequest.setStatus("Sent to Supplier");
        
        Organization org = null;
       for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
           if (organization instanceof SupplierOrganization){
               org = organization;
               break;
           }
       }
       if (org!=null){
           org.getWorkQueue().getWorkRequestList().add(tRequest);
           userAccount.getWorkQueue().getWorkRequestList().add(tRequest);
            JOptionPane.showMessageDialog(null, "Request submitted Successfully");
       }

      }
        else if (flag == 5){
            String message = messageJTextField.getText();
        pCRequest.setMessage(message);
        pCRequest.setReceiver(userAccount);
        pCRequest.setStatus("Sent to Supplier");
        
        Organization org = null;
       for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
           if (organization instanceof SupplierOrganization){
               org = organization;
               break;
           }
       }
       if (org!=null){
           org.getWorkQueue().getWorkRequestList().add(pCRequest);
           userAccount.getWorkQueue().getWorkRequestList().add(pCRequest);
            JOptionPane.showMessageDialog(null, "Request submitted Successfully");
       }

            
        }
        else if (flag == 6){
            String message = messageJTextField.getText();
        sWRequest.setMessage(message);
        sWRequest.setReceiver(userAccount);
        sWRequest.setStatus("Sent to Supplier");
        
        Organization org = null;
       for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
           if (organization instanceof SupplierOrganization){
               org = organization;
               break;
           }
       }
       if (org!=null){
           org.getWorkQueue().getWorkRequestList().add(sWRequest);
           userAccount.getWorkQueue().getWorkRequestList().add(sWRequest);
            JOptionPane.showMessageDialog(null, "Request submitted Successfully");
       }

            
        }
     
       

    }//GEN-LAST:event_submitJButtonActionPerformed

    private void messageJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageJTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField messageJTextField;
    private javax.swing.JButton submitJButton;
    // End of variables declaration//GEN-END:variables
}
